-- Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
--
-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
--
-- By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

CREATE OR REPLACE FUNCTION fib(int)
RETURNS INTEGER AS $$
BEGIN
  RETURN CASE
    WHEN $1 = 0 THEN 0
    WHEN $1 = 1 THEN 1
  ELSE
    fib($1 - 1) + fib($1 - 2)
  END;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION fibSum(int, int, int, int)
RETURNS INTEGER AS $$
DECLARE
  soFar ALIAS FOR $1;
  n ALIAS FOR $2;
  lastFib ALIAS FOR $3;
  beforeLastFib ALIAS FOR $4;
  thisFib INTEGER;
BEGIN
  SELECT (beforeLastFib + lastFib) INTO thisFib;
  RETURN CASE
  WHEN thisFib = 0 AND n = 0 THEN 1
  WHEN thisFib = 1 AND n = 0 THEN 1
  ELSE fibSum(soFar + thisFib, n - 1, lastFib, thisFib)
  END;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION fibSum(int)
RETURNS INTEGER AS $$
BEGIN
  IF $1 <= 0 THEN
    RETURN 0;
  ELSIF $1 = 1 THEN
    RETURN 1;
  ELSE
    RETURN fibSum(0, $1, 0, 1);
  END IF;
END;
$$ LANGUAGE plpgsql;

SELECT fibSum(10);
